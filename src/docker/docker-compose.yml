version: '3.8'

services:
  etcd:
    image: bitnami/etcd:latest
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ENABLE_V2=true  # Optional, enable if your application needs etcd v2 API
    ports:
      - "2379:2379"  # Client communication
      - "2380:2380"  # Server-to-server communication
    #    volumes:
    #      - etcd_data:/bitnami/etcd
    networks:
      - scooter-net

  scooter-server-1:
    image: scooter-server:0.3
    environment:
      - ETCD_SERVER
      - ETCD_LEASE_DURATION
      - PAXOS_PORT
      - SNAPSHOT_INTERVAL
    labels:
      - "traefik.http.services.scooter-servers.loadbalancer.server.port=50053"
      - "traefik.http.routers.scooter-servers.rule=PathPrefix(`/`)"
      - "traefik.http.routers.scooter-servers.entrypoints=web"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.interval=10s"
    networks:
      - scooter-net
    depends_on:
      - etcd

  scooter-server-2:
    image: scooter-server:0.3
    environment:
      - ETCD_SERVER
      - ETCD_LEASE_DURATION
      - PAXOS_PORT
      - SNAPSHOT_INTERVAL
    labels:
      - "traefik.http.services.scooter-servers.loadbalancer.server.port=50053"
      - "traefik.http.routers.scooter-servers.rule=PathPrefix(`/`)"
      - "traefik.http.routers.scooter-servers.entrypoints=web"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.interval=10s"
    networks:
      - scooter-net
    depends_on:
      - etcd

  scooter-server-3:
    image: scooter-server:0.3
    environment:
      - ETCD_SERVER
      - ETCD_LEASE_DURATION
      - PAXOS_PORT
      - SNAPSHOT_INTERVAL
    labels:
      - "traefik.http.services.scooter-servers.loadbalancer.server.port=50053"
      - "traefik.http.routers.scooter-servers.rule=PathPrefix(`/`)"
      - "traefik.http.routers.scooter-servers.entrypoints=web"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.interval=10s"
    networks:
      - scooter-net
    depends_on:
      - etcd

  scooter-server-4:
    image: scooter-server:0.3
    environment:
      - ETCD_SERVER
      - ETCD_LEASE_DURATION
      - PAXOS_PORT
      - SNAPSHOT_INTERVAL
    labels:
      - "traefik.http.services.scooter-servers.loadbalancer.server.port=50053"
      - "traefik.http.routers.scooter-servers.rule=PathPrefix(`/`)"
      - "traefik.http.routers.scooter-servers.entrypoints=web"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.interval=10s"
    networks:
      - scooter-net
    depends_on:
      - etcd

  scooter-server-5:
    image: scooter-server:0.3
    environment:
      - ETCD_SERVER
      - ETCD_LEASE_DURATION
      - PAXOS_PORT
      - SNAPSHOT_INTERVAL
    labels:
      - "traefik.http.services.scooter-servers.loadbalancer.server.port=50053"
      - "traefik.http.routers.scooter-servers.rule=PathPrefix(`/`)"
      - "traefik.http.routers.scooter-servers.entrypoints=web"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.scooter-servers.loadbalancer.healthcheck.interval=10s"
    networks:
      - scooter-net
    depends_on:
      - etcd

# Remove comments and comment out traefik to use nginx
#  nginx:
#    image: nginx:latest
#    ports:
#      - "50053:8080"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#    networks:
#      - scooter-net
#    depends_on:
#      - scooter-server-1
#      - scooter-server-2
#      - scooter-server-3
#      - scooter-server-4
#      - scooter-server-5

  traefik:
    image: traefik:v2.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:50053"
    ports:
      - "50053:50053"  # Traefik listens on port 50053 for incoming requests
      - "8081:8080"  # Dashboard on port 8081
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - scooter-net


  spa:
    image: scooter-spa:0.1
    ports:
      - "4300:80"

networks:
  scooter-net:
    driver: bridge

#volumes:
#  etcd_data:
